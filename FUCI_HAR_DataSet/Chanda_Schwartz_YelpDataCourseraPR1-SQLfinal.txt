Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile
 and understand the data just like a data scientist would. For this first part of the assignment, you will be
 assessed both on the correctness of your findings, as well as the code you used to arrive at your answer.
 You will be graded on how easy your code is to read, so remember to use proper formatting and comments where
 necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data
 for a particular research question you want to answer. You will be required to prepare the dataset for the
 analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read,
 so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and
 your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers
 can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++,
 Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout
 application, just be careful to make sure your answers and code are lined appropriately.
 In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
SELECT *
FROM table
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. 
If two foreign keys are listed in the table, please specify which foreign key.
SELECT COUNT(DISTINCT primary/foreign key)
FROM table

i. Business = 10000
ii. Hours = 1562
iii. Category = 2643
iv. Attribute = 1115
v. Review = 10000
vi. Checkin = 493
vii. Photo = 10000
viii. Tip (user_id) = 537
ix. User = 10000
x. Friend = 11
xi. Elite_years = 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: NO
	
	
	SQL code used to arrive at answer:
	SELECT *
	FROM user 
	WHERE NOT ('user' IS NOT NULL)

	

	
4. For each table and column listed below, display the smallest (minimum),
   largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min: 1		max: 5		avg: 3.7082 
		
	
	ii. Table: Business, Column: Stars
	
		min: 1		max: 5		avg: 3.6549 
		
	
	iii. Table: Tip, Column: Likes
	
		min: 0		max: 2		avg: 0.0144 
		
	
	iv. Table: Checkin, Column: Count
	
		min: 1		max: 53		avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		min: o		max: 2000	avg: 24.2995
		


5. List the cities with the most reviews in descending order:


	SQL code used to arrive at answer:
SELECT city
  , review_count
  FROM business
  GROUP BY city
  ORDER BY review_count DESC

	
	Copy and Paste the Result Below:
+------------------------+--------------+
| city                   | review_count |
+------------------------+--------------+
| Woodmere Village       |          242 |
| Mount Lebanon          |          138 |
| Charlotte              |          120 |
| McMurray               |          112 |
| North York             |          109 |
| Enterprise             |           89 |
| Matthews               |           77 |
| Munroe Falls           |           74 |
| Ahwatukee              |           69 |
| Pittsburgh             |           68 |
| Woodmere               |           68 |
| Tolleson               |           65 |
| Pineville              |           63 |
| Carnegie               |           61 |
| Macedonia              |           58 |
| Markham                |           54 |
| Whitchurch-Stouffville |           52 |
| Windsor                |           50 |
| Goodyear               |           49 |
| Gibsonia               |           45 |
| Summerlin              |           44 |
| Peninsula              |           42 |
| Richfield              |           42 |
| Dormont                |           40 |
| nboulder city          |           40 |
+------------------------+--------------+
(Output limit exceeded, 25 of 362 total rows shown)
	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:
  SELECT stars
  , COUNT(stars)
  FROM business
  WHERE city = "Avon"
  GROUP BY stars

Copy and Paste the Resulting Table Below (2 columns – star rating and count):
+-------+--------------+
| stars | COUNT(stars) |
+-------+--------------+
|   1.5 |            1 |
|   2.5 |            2 |
|   3.5 |            3 |
|   4.0 |            2 |
|   4.5 |            1 |
|   5.0 |            1 |
+-------+--------------+

ii. Beachwood

SQL code used to arrive at answer:
  SELECT stars
  , COUNT(stars)
  FROM business
  WHERE city = "Beachwood"
  GROUP BY stars

Copy and Paste the Resulting Table Below (2 columns – star rating and count):
+-------+--------------+
| stars | COUNT(stars) |
+-------+--------------+
|   2.0 |            1 |
|   2.5 |            1 |
|   3.0 |            2 |
|   3.5 |            2 |
|   4.0 |            1 |
|   4.5 |            2 |
|   5.0 |            5 |
+-------+--------------+

7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
  SELECT id
  , name
  , review_count 
  FROM user
  ORDER BY review_count DESC
  LIMIT 3
		
	Copy and Paste the Result Below:
+------------------------+-----------+--------------+
| id                     | name      | review_count |
+------------------------+-----------+--------------+
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |         2000 |
| -3s52C4zL_DHRK0ULG6qtg | Sara      |         1629 |
| -8lbUNlXVSoXqaRRiHiSNg | Yuri      |         1339 |
+------------------------+-----------+--------------+

8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:
	

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer:
Love
	
	SQL code used to arrive at answer:
  SELECT 
  (SELECT COUNT(text)
  FROM review
  WHERE text LIKE "%love%") as contains_love
  ,(SELECT COUNT(text)
  FROM review
  WHERE text LIKE "%hate%") as contains_hate
	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
  SELECT id
  ,name
  ,fans
  FROM user
  ORDER BY fans DESC	
  LIMIT 10
	
	Copy and Paste the Result Below:
+------------------------+-----------+------+
| id                     | name      | fans |
+------------------------+-----------+------+
| -9I98YbNQnLdAmcYfb324Q | Amy       |  503 |
| -8EnCioUmDygAbsYZmTeRQ | Mimi      |  497 |
| --2vR0DIsmQ6WfcSzKWigw | Harald    |  311 |
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |  253 |
| -0IiMAZI2SsQ7VmyzJjokQ | Christine |  173 |
| -g3XIcCb2b-BD0QBCcq2Sw | Lisa      |  159 |
| -9bbDysuiWeo2VShFJJtcw | Cat       |  133 |
| -FZBTkAZEXoP7CYvRV2ZwQ | William   |  126 |
| -9da1xk7zgnnfO1uTVYGkA | Fran      |  124 |
| -lh59ko3dxChBSZ9U7LfUw | Lissa     |  120 |
+------------------------+-----------+------+	
	
11. Is there a strong relationship (or correlation) between having a high number
 of fans and being listed as "useful" or "funny?" Out of the top 10 users with
 the highest number of fans, what percent are also listed as “useful” or “funny”?

Key:
0% - 25% - Low relationship
26% - 75% - Medium relationship
76% - 100% - Strong relationship
	
	SQL code used to arrive at answer:
I can't get this one.  I've tried, but my percentages come out as whole numbers
so I can't create an accurate CASE statement with the above key. I have only included code that actually 
works below
	SQL code used to arrive at answer:

	SELECT name, id, fans, useful, funny
	FROM user
	GROUP BY fans
	ORDER BY fans DESC
	
	Copy and Paste the Result Below:
+-----------+------------------------+------+--------+--------+
| name      | id                     | fans | useful |  funny |
+-----------+------------------------+------+--------+--------+
| Amy       | -9I98YbNQnLdAmcYfb324Q |  503 |   3226 |   2554 |
| Mimi      | -8EnCioUmDygAbsYZmTeRQ |  497 |    257 |    138 |
| Harald    | --2vR0DIsmQ6WfcSzKWigw |  311 | 122921 | 122419 |
| Gerald    | -G7Zkl1wIWBBmD0KRy_sCw |  253 |  17524 |   2324 |
| Christine | -0IiMAZI2SsQ7VmyzJjokQ |  173 |   4834 |   6646 |
| Lisa      | -g3XIcCb2b-BD0QBCcq2Sw |  159 |     48 |     13 |
| Cat       | -9bbDysuiWeo2VShFJJtcw |  133 |   1062 |    672 |
| William   | -FZBTkAZEXoP7CYvRV2ZwQ |  126 |   9363 |   9361 |
| Fran      | -9da1xk7zgnnfO1uTVYGkA |  124 |   9851 |   7606 |
| Lissa     | -lh59ko3dxChBSZ9U7LfUw |  120 |    455 |    150 |
| Mark      | -B-QEUESGWHPE_889WJaeg |  115 |   4008 |    570 |	
	
	Please explain your findings and interpretation of the results:
	
	
	

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that
 city or category by their overall star rating. Compare the businesses with
 2-3 stars to the businesses with 4-5 stars and answer the following questions. 
 Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours?
yes

ii. Do the two groups you chose to analyze have a different number of reviews?
yes         
         
iii. Are you able to infer anything from the location data provided between 
these two groups? Explain.
All the businesses have 3.5 star or higher review.  Charlotte is a nice city.

SQL code used for analysis:
SELECT *
FROM business 
JOIN category ON business.id  = category.business_id
JOIN hours ON category.business_id = hours.business_id
WHERE CITY = 'Charlotte'
GROUP BY name
ORDER BY stars
		
		
2. Group business based on the ones that are open and the ones that are closed. 
What differences can you find between the ones that are still open and the ones
that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
The businesses that are closed have the fewest reviews
         
         
ii. Difference 2:
The businesses that are closed both have 5 stars.         
         
         
SQL code used for analysis:
SELECT *
FROM business 
JOIN category ON business.id  = category.business_id
JOIN hours ON category.business_id = hours.business_id
WHERE CITY = 'Charlotte'
GROUP BY name
ORDER BY is_open
	
	
3. For this last part of your analysis, you are going to choose the type of 
analysis you want to conduct on the Yelp dataset and are going to prepare the 
data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for 
sentiment analysis, clustering businesses to find commonalities or 
anomalies between them, predicting the overall star rating for a business, 
predicting the number of fans a user will have, and so on. These are just a 
few examples to get you started, so feel free to be creative and come up with 
your own problem you want to solve. Provide answers, in-line, to all of the 
following:
	
i. Indicate the type of analysis you chose to do:
What type of business is most likely to close?         
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:

I need to JOIN business and catergory tables so I can calculate the percent of businesses closed & open for each 
category.  To calculate those percentages, I will calculate the sum of open businesses and closes businesses for each category
then divide both of those totals by the total number of businesses in said category. The most likely category of
business to close are Gluten-Free, italian, and Venues & Event Spaces.  I only want to look at category that 
have more than one store in it, otherwise the numbers could be skewed.
    
              
iii. Output of your finished dataset:
+-----------------------+------------------+-----------------+-------------------+----------+------------+
| category              | total_businesses | open_businesses | closed_businesses | pct_open | pct_closed |
+-----------------------+------------------+-----------------+-------------------+----------+------------+
| Gluten-Free           |                2 |               0 |                 2 |      0.0 |        1.0 |
| Italian               |                2 |               0 |                 2 |      0.0 |        1.0 |
| Venues & Event Spaces |                2 |               0 |                 2 |      0.0 |        1.0 |
| Carpet Installation   |                1 |               0 |                 1 |      0.0 |        1.0 |
| Chocolatiers & Shops  |                1 |               0 |                 1 |      0.0 |        1.0 |
| Dance Clubs           |                1 |               0 |                 1 |      0.0 |        1.0 |
| Department Stores     |                1 |               0 |                 1 |      0.0 |        1.0 |
| Discount Store        |                1 |               0 |                 1 |      0.0 |        1.0 |
| Dog Walkers           |                1 |               0 |                 1 |      0.0 |        1.0 |
| Irish                 |                1 |               0 |                 1 |      0.0 |        1.0 |
+-----------------------+------------------+-----------------+-------------------+----------+------------+

         
iv. Provide the SQL code you used to create your final dataset:
SELECT
  c.category
,
  COUNT(b.id) total_businesses
,
  SUM(b.is_open) open_businesses
,
  COUNT(b.id) - SUM(b.is_open) closed_businesses
,
  SUM(b.is_open) * 1.0 / COUNT(b.id) * 1.0 pct_open
,
  (COUNT(b.id) * 1.0 - SUM(b.is_open) * 1.0) / COUNT(b.id) * 1.0 pct_closed

FROM business b
JOIN category c 
ON b.id = c.business_id

GROUP BY c.category

ORDER BY pct_closed DESC, closed_businesses DESC
LIMIT 10;
